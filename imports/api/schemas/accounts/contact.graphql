type Contact {
    _id: String!
    contact_details: ContactDetails
    contact_roles: ContactRoles
    status: Status
    title: String
    category: [String]
    contacts: ContactGroup
    createdAt: String
}

type UserData {
    user_id: String!
    contact_details: ContactDetails
    contacts: UserDataContactGroup
}

type ContactDetails {
    first_name: String!
    last_name: String!
    custom_group: String
}

type ContactRoles {
    name: String!
    title: String
    capabilities: Capabilities
}

type Capabilities {
    system_settings: [String]
    invoice_modules: [String]
}

type ContactGroup {
    aioms_ids: [AiomsIds]
    main: ContactCard
}

type UserDataContactGroup {
    main: UserDataContactCard
}

type AiomsIds {
    org_name: String
    aioms_id: String
}

type ContactCard implements MainContact {
    contact_type: String
    address: ContactAddress
    email_address: String
    phone: String
    website: String
    extras: ContactExtras
}

type ContactExtras {
    emails: [String]
    phones: [String]
}

type UserDataContactCard {
    contact_type: String
    address: ContactAddress
    website: String
    extras: ContactExtras
}

type ContactAddress implements Address {
    country: String
    suburb: String
    state: String
    address: String
    zip_code: Int
    custom_group: String
}

input ContactInputs {
    contact_details: ContactDetailsInput!
    contact_roles: ContactRolesInput
    title: String
    category: [String]
    contacts: ContactInput!
}

input ContactUpdateInputs {
    contact_details: ContactDetailsInput
    contact_roles: ContactRolesInput
    status: StatusInput
    title: String
    category: [String]
    contacts: ContactInput
    register: Boolean = false
}

input UserDataInputs {
    contact_details: ContactDetailsInput
    contacts: UserDataContactInput
}

input UserDataContactInput {
    main: MainUserDataContactInput
}

input MainUserDataContactInput {
    contact_type: String
    address: AddressInput
    website: String
    extras: ExtraInput
}

input ContactRolesInput {
    name: String!
    title: String
    capabilities: CapabilitiesInput
}

input CapabilitiesInput {
    system_settings: [String]
    invoice_modules: [String]
}

input ContactDetailsInput {
    first_name: String!
    last_name: String!
    custom_group: String
}

extend input ContactInput {
    aioms_ids: [AiomsIdsInput]
}

input AiomsIdsInput {
    org_name: String = "Default"
    aioms_id: String
}

extend type Mutation {
    createContact(org_id: String!, datas: ContactInputs!): Contact
    updateContact(contact_id: String!, datas: ContactUpdateInputs!): Contact
    updateUserData(user_id: String!, datas: UserDataInputs!): UserData
}

extend type Query {
    getContact(contact_id: String!): Contact
    getContacts(org_id: String!): [Contact]
    getUserData(user_id: String!): UserData
}